name: Build, unittest and publish

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.12"
  AZURE_ARTIFACTS_UPLOAD_URL: "https://pkgs.dev.azure.com/mostertpim/BayesianNetwork/_packaging/BayesianNetwork/pypi/upload/"
  
jobs:
  build-package:
    name: Build package
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Build package
        run: |
          python -m pip install --upgrade pip
          pip install build
          python -m build --wheel  
          
      - name: Upload wheel
        uses: actions/upload-artifact@v4
        with:
          name: bayesian-network
          path: dist/*.whl
          
  unit-tests:
    name: Unit tests
    runs-on: "ubuntu-latest"
    needs: build-package
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # required for setuptools-scm

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Download wheel
        uses: actions/download-artifact@v4
        with:
          name: bayesian-network
          path: dist
          
      - name: Install bayesian-network wheel
        run: |
          python -m pip install --upgrade pip
          pip install dist/*.whl
      - name: Test with unittest
        run: |
          python -m unittest
          
  publish:
    name: Publish
    needs: unit-tests
    runs-on: "ubuntu-latest"
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - name: Download wheel
        uses: actions/download-artifact@v4
        with:
          name: bayesian-network
          path: dist
          
      - name: Publish package
        env:
          TWINE_USERNAME: ""
          TWINE_PASSWORD: ${{ secrets.AZURE_ARTIFACTS_READWRITE_TOKEN }}
          TWINE_REPOSITORY_URL: ${{ env.AZURE_ARTIFACTS_UPLOAD_URL }}
        run: |
          pip install twine
          python -m twine upload dist/*.whl